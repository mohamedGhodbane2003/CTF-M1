def calculate_private_key(N, e, p, q):
    phi_n = (p - 1) * (q - 1)
    d = pow(e, -1, phi_n)
    return d

# Composantes RSA
N = 19798060110101125280881886151173402273118286119543540089612904734372842120549628306852780764017683961129651157523856804876630933653780381746866003967661050927018533485408014240120653507479858433718766578732531906636297751266421068113048109595923129249051599413221367291544203627690431532171064440772234248445694040311469160299164869689624910601756629030018428802137803459013864994681071329458781111157968671253034168678359036242361775006630256676588892028016587699116077966263874244104538786462762532076882838375785369773511888895829364411493252342369937540257179402520259646220660742773273899885611440111083075849387
e = 867472621535209526669640300069947045315616069954012007907611769713717121
p = 143299266005601783328250950487380210291140492195397627911520059117092625399881218301225122782638736605405162742458690406690648828274439758062817620695951224289869325327493869672632707949511539673817777308569630197245731774880408354519863680596818073319423151763783053909238314238698501261679321861305073497391
q = 138158838226897752597364526708210029150088105528718201253588780570290194941642629634020254119776717091856491353194639345758567608359942174241695883422596960371999699786137911103084936858002889844747889840501844005726210093021971853530778888420397057588238600255355417953527788079092800101899906394715030649157

# Calcul de la clé privée
d = calculate_private_key(N, e, p, q)

# Affichage de la clé privée
print("Clé privée (d) :", d)